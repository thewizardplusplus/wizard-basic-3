include "range/array"
include "array/utils"
include "args"

let COMPARE_RESULT_LESS = -1
let COMPARE_RESULT_EQUAL = 0
let COMPARE_RESULT_GREATER = 1

function ArrayNumberToString(array, precision)
	let result = "["
	let i = Range([array])
	while Next(i) do
		if not i.first then
			result = Append(result, ", ")
		end

		result = Append(result, ToString(i.value, precision))
	end
	result = Append(result, "]")

	return result
end

note ArrayNumberIndexOf(array, value, offset)
function ArrayNumberIndexOf(args)
	let array = Arg([args, 0])
	let value = Arg([args, 1])
	let offset = Arg([args, 2, 0])

	let i = Range([array, offset])
	while Next(i) do
		if i.value == value then
			return i.index
		end
	end

	return NULL
end

note ArrayNumberLastIndexOf(array, value, offset)
function ArrayNumberLastIndexOf(args)
	let array = Arg([args, 0])
	let value = Arg([args, 1])
	let offset = Arg([args, 2, GetLength(array)])

	let i = Range([array, 0, offset, TRUE])
	while Next(i) do
		if i.value == value then
			return i.index
		end
	end

	return NULL
end

function Compare(array_1, array_2)
	let array_1_length = GetLength(array_1)
	let array_2_length = GetLength(array_2)

	long note
		Can't use ranges because Next() uses this function
		and it'll create recursion.
	...
	let i = 0
	while i < array_1_length and i < array_2_length do
		if array_1[i] < array_2[i] then
			return -1
		else if array_1[i] > array_2[i] then
			return 1
		end

		i = i + 1
	end

	if array_1_length < array_2_length then
		return COMPARE_RESULT_LESS
	else if array_1_length == array_2_length then
		return COMPARE_RESULT_EQUAL
	else
		return COMPARE_RESULT_GREATER
	end
end
