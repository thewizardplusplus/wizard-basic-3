include "general"

structure NumberRange
	minimum
	maximum
	step
	reverse

	value
	first
	last
	index
end

function RangeNew(minimum, maximum, step, reverse)
	let range = new NumberRange
	if not reverse then
		range.minimum = minimum
		range.maximum = maximum
	else
		range.minimum = maximum
		range.maximum = minimum
	end
	range.step = step
	range.reverse = reverse

	range.value = range.minimum - range.step
	range.first = FALSE
	range.last = FALSE
	range.index = -1

	return range
end

function RangeWithStep(minimum, maximum, step)
	return RangeNew(minimum, maximum, step, FALSE)
end

function RangeReverseWithStep(minimum, maximum, step)
	return RangeNew(minimum, maximum, -step, TRUE)
end

function RangeSimple(minimum, maximum)
	return RangeNew(minimum, maximum, 1, FALSE)
end

function RangeReverseSimple(minimum, maximum)
	return RangeNew(minimum, maximum, -1, TRUE)
end

function RangeNext(range)
	if range.last then
		return FALSE
	end

	range.value = range.value + range.step
	range.first = range.value == range.minimum
	if not range.reverse then
		range.last = range.value + range.step > range.maximum
	else
		range.last = range.value + range.step < range.maximum
	end
	range.index = range.index + 1

	return TRUE
end
